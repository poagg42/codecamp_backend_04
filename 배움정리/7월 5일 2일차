알고리즘 2일차

배열
[] 대괄호 열고 닫고

배열에 length 기능을 사용하면 

배열 안에 몇 개의 데이터가 있는지 확인할 수 있다

배열 안의 데이터는 index 번호를 가지며 0번 째 인덱스 부터 시작한다

배열의 index로 해당 데이터에 접근할 수 있다

배열 갯수보다 높은 수를 []에 입력하면

undefinded를 나타낸다

메서드를 이용해서 기능 수행

push

Array.push() 배열 맨 뒤에 데이터 추가
Array.unshift() 배열 맨 앞에 데이터 추가  unshift는 다른 인덱스들에게도 영향을 준다

pop 배열 맨 뒤의 데이터 삭제 Array.pop()
shift 배열 맨 앞의 데이터 삭제 Array.shift() shift도 다른 인덱스에 영향을 준다

indexOf 데이터의 index 값 반환      Array.indexOf() 주어진 배열에 존재하지 않는 데이터라면 -1 반환
includes 데이터의 존재 여부 반환(true/false) Array.includes()  데이터의 불린값을 반환

배열을 선언과 할당할 때

인덱스를 이용한 방법을 많이 사용하지 않는 이유는

잘못된 인덱스를 선택하여 오류가 날까봐

현업에서는 arr.push()를 많이 사용한다

웬만하면 메서드를 이용해서 쓰자

객체 

데이터들을 종류에 맞게 분류하여 저장 

객체는 중괄호 {}

쉼표로 구분

객체는 Key와 Value로 데이터를 저장한다

Key는 데이터의 이름, Value는 데이터의 값

객체의 데이터를 조회할 때는 

객체의 Key 값을 이용해 조회할 수 있다.


const Obj = {
    "name" : "철수",
    "age" : 12,
    "school" : {
        "name" : "다람쥐 초등학교"
    }
}

Obj.name   "철수"

Obj.age     "12"

Obj.school  {"name":"다람쥐 초등학교"}

점을 사용하는 dot.notation이라는 표기 방법이다

bracket notation은 괄호를 사용하는 표기방법

Obj["name"]  '철수'

bracket notation은 

let key = "name"
Obj[key] 괄호 안에 큰따옴표가 없으면 key라는 변수를 찾는다


객체의 데이터 추가/변경

Obj.dog = "체리"

닷 노에이션과 =을 사용해서 할당

데이터 변경 Obj.dog = "똘이"

객체 데이터 삭제

delete Obj.school


Node js 2일차

1교시 깔끔한 문자열 Template-Literal

2교시 신기한 변수 선언 Destructing

3교시 날짜 다루기 Date

홈페이지에 보이는 가운데는 html 코드

놓친 부분 github에서 다운로드 

템플릿 리터럴 

const name = "철수"
const age = 8
const school = "다람쥐초등학교"

console.log(name + "는" age + "이고" + school "에 다닙니다")

console.log(`$(name)는 $(age)살이고 $(school)에 다닙니다`)

백틱은 엔터도 가능

console.log(`$(name)는
 $(age)살이고
  $(school)에 다닙니다`)


매개변수와 인자를 사용한다

function getWelcomeTemplate(name, age, school, createdAt){
    const mytemplate = `
        <html>
            <body>
                <h1>${name}님 가입을 환영합니다!!!</h1>
                <hr />
                <div>이름: ${name}</div>
                <div>나이: ${age}살</div>
                <div>학교: ${school}</div>
                <div>가입일: ${createdAt}</div>
            </body>
        </html>
    `
    console.log(mytemplate)
}

const myname = "영희"
const myage = 12
const myschool = "토끼초등학교"
const mycreatedAt ="2020-01-02"

getWelcomeTemplate(myname, myage, myschool,mycreatedAt)

안전한 코드로 바꾸려면 객체로 변환

객체로 바꾸고 이름을 따라간다

매개변수와 인자 

2교시 비구조화할당(=구조분해할당)

const { banana, money} = aaa // aaa라는 객체에서 banana랑 money에서

꺼내서 값을 설정해라

한번에 만들기 위해 구조분해할당이 생김

const {age, name} = { name: 철수 , age : 12} 
//객체는 순서는 중요하지 않지만 
//이름이 중요하다

const [friend1, friend2, qqq] = ["철수","영희","훈이"]

// 배열은 키가 없다 그래서 변수 이름을 내 맘대로 만든다

const [friend2, qqq] = ["철수", "영희", "훈이"]

배열을 구조분해할당 할 때는 순서가 중요하다 이름은 중요하지 않다

객체를 구조분해할당 할 때는 이름이 중요하다 순서는 중요하지 않다

하드코딩 하지말고 인자를 매개변수에 넣는다

매개변수와 함수 내부에 있는 return 값을 이용해서 해보자

키와 밸류가 같으면 밸류를 생략할 수 있다

shorthand property