다대다 관계

product 와 productTag

태그 나누고 등록하고 

ManytoOne은 데이터베이스 자체에서 제공

OnetoMany는 필수가 아님 편의상 제공

2교시 로그인 기본 개념

인증 -> 이메일과 비밀번호를 가지고 db에 가서 있는지 확인한다.
인가 -> qqq를 가지고 판단한다. -> db 안 가도 된다.

scale up -> 컴퓨터 사양 업
scale out -> 여러 백엔드 서버를 만든다.

stateful -> stateless로 만들기 위해
메모리를 지우고 db로 옮겼다

그래도 문제점 DB에 트래픽이 몰리면 어떻게 할 것인가? DB에 번호를 나눠서??

데이터베이스의 샤딩과 파티셔닝

데이터베이스의 테이블을 나눈다. 가로 세로

디스크 -> 껐다 켜도 살아있다 

디스크는 영구저장이 되지만 저장하는 데 오래 걸린다.

메모리 -> 매우 빠르다

그래서 데이터를 db 밖 메모리의 일종인

Redis를 사용한다.

방법 1. Redis에 인증 토큰 저장해놓기

방법 2. JWT 토큰 이용하기


암호화할 때 

127328 -> abgcbh  (암호화)

원래 상태로 돌리는 것

127328 <- abgcbh (복호화)

인가 

db까지 갈 필요가 없이 복호화 해보고 로그인 기한 (내일까지) 안이면

브라우저에 데이터 전송

JWT 선택적 서명 및 선택적 암호화를 사용하여 데이터를 만들기 위한 인터넷 표준   -- 누구든지 열어볼 수 있는 토큰  중요한 데이터 저장하지 않기

JSON Web Token 


오늘 배운 것

ManytoMany

Login

기존의 로그인 프로세스 -> 어떻게 개선했는가

마지막에는 회원가입
-> 비밀번호를 평문으로 넣었었는데

이제는 바꿔야한다. 암호화 방법

양방향 암호화, 단방향 암호화 등이 있는데 그건 다음 시간에

